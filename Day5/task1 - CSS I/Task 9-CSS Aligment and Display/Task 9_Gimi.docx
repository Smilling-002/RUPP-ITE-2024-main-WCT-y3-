Aligning Elements and Display Properties in CSS

Alignment

CSS offers several properties to align elements both horizontally and vertically:

Horizontal Alignment:

.text-align: Aligns the text within an element.
.text-align: left;
.text-align: right;
.text-align: center;
.text-align: justify;
.margin and padding: Can be used to create space around elements and control their horizontal alignment.
.float: Positions an element to the left or right of its container.
.float: left;
.float: right;
Vertical Alignment:

.vertical-align: Aligns the content within an element vertically.
.vertical-align: top;
.vertical-align: middle;
.vertical-align: bottom;
.line-height: Controls the spacing between lines of text.
.flexbox and grid layout: Powerful tools for creating complex layouts and aligning elements.
Display Properties

The display property determines how an element is displayed. It can take several values:

.block: Displays an element as a block-level element, taking up the full width of its container.
.inline: Displays an element as an inline element, not starting a new line.
.inline-block: Displays an element as an inline-block element, combining the characteristics of block and inline elements.
.flex: Enables flexible box layout, allowing you to arrange items flexibly.
.grid: Enables grid layout, allowing you to create complex grid-based layouts.
Example:

HTML:

HTML
<!DOCTYPE html>
<html>
<head>
    <title>Alignment and Display Example</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="text-alignment">
        <p>Left-aligned text</p>
        <p style="text-align: right;">Right-aligned text</p>
        <p style="text-align: center;">Center-aligned text</p>
        <p style="text-align: justify;">Justified Â  
 text</p>
    </div>

    <div class="vertical-alignment">
        <div class="box">Top-aligned content</div>
        <div class="box" style="vertical-align: middle;">Middle-aligned content</div>
        <div class="box" style="vertical-align: bottom;">Bottom-aligned content</div>
    </div>

    <div class="flex-container">
        <div class="flex-item">Item 1</div>
        <div class="flex-item">Item 2</div>
        <div class="flex-item">Item 3</div>
    </div>
</body>
</html>

CSS
.text-alignment p {
    border: 1px solid black;
    padding: 10px;
}

.vertical-alignment {
    display: flex;
    height: 200px;
    align-items: center; /* Align items vertically */
}

.vertical-alignment .box {
    border: 1px solid black;
    width: 100px;
    height: 50px;
    text-align: center;
}

.flex-container {
    display: flex;
    justify-content: space-between; /* Space items horizontally */
}

.flex-item {
    border: 1px solid black;
    padding: 10px;
}